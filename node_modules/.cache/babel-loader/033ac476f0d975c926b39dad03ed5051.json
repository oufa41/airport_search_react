{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raoof\\\\Desktop\\\\Incorta\\\\AirportSearch\\\\client-app\\\\src\\\\components\\\\OnlinePosts\\\\GetOnlinePosts.js\";\nimport React, { Component } from 'react';\n\nclass GetOnlinePosts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: \"\",\n      error: null,\n      isLoaded: false,\n      airports: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    // I will use fake api from jsonplaceholder website\n    // this return 100 posts\n    fetch(\"http://localhost:8000/testApi\").then(response => response.json()).then( // handle the result\n    result => {\n      this.setState({\n        isLoaded: true,\n        airports: result\n      });\n    });\n  }\n\n  handleChange() {\n    this.setState({\n      searchString: this.refs.search.value\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          airports = _this$state.airports;\n    let _airports = this.state.airports;\n    console.log(airports);\n    let search = this.state.searchString.trim().toLowerCase();\n\n    if (search.length > 0) {\n      _airports = _airports.filter(function (airport) {\n        let searchItem = airport.iso_country + airport.name;\n        return searchItem.toLowerCase().match(search);\n      });\n    }\n\n    console.log(countries);\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Error in loading\");\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Loading ...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.searchString,\n        ref: \"search\",\n        onChange: this.handleChange,\n        placeholder: \"Country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, _airports.map(airport => React.createElement(\"li\", {\n        key: airport.id,\n        align: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, airport.iso_country, \": \", airport.name)))));\n    }\n  }\n\n}\n\nexport default GetOnlinePosts;","map":{"version":3,"sources":["C:\\Users\\Raoof\\Desktop\\Incorta\\AirportSearch\\client-app\\src\\components\\OnlinePosts\\GetOnlinePosts.js"],"names":["React","Component","GetOnlinePosts","constructor","props","state","searchString","error","isLoaded","airports","handleChange","bind","componentDidMount","fetch","then","response","json","result","setState","refs","search","value","render","_airports","console","log","trim","toLowerCase","length","filter","airport","searchItem","iso_country","name","match","countries","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nclass GetOnlinePosts extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchString: \"\",\r\n            error : null,\r\n            isLoaded : false,\r\n            airports : []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        // I will use fake api from jsonplaceholder website\r\n        // this return 100 posts\r\n        fetch(\"http://localhost:8000/testApi\")\r\n        .then( response => response.json())\r\n        .then(\r\n            // handle the result\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded : true,\r\n                    airports : result,\r\n                });\r\n            })\r\n\r\n\r\n    }\r\n    handleChange() {\r\n    this.setState({\r\n      searchString: this.refs.search.value\r\n    });\r\n  }\r\n    render() {\r\n\r\n    const {error, isLoaded, airports} = this.state;\r\n    let _airports = this.state.airports;\r\n    console.log(airports);\r\n    let search = this.state.searchString.trim().toLowerCase();\r\n    if (search.length > 0) {\r\n      _airports = _airports.filter(function(airport) {\r\n      let searchItem = airport.iso_country + airport.name;\r\n      return searchItem.toLowerCase().match(search);\r\n      });\r\n    }\r\n\r\n    console.log(countries);\r\n    if(error){\r\n        return <div>Error in loading</div>\r\n    }else if (!isLoaded) {\r\n        return <div>Loading ...</div>\r\n    }else{\r\n        return(\r\n            <div>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.searchString}\r\n              ref=\"search\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"Country\"\r\n              />\r\n                <ol className=\"item\">\r\n                {\r\n                    _airports.map(airport => (\r\n                        <li key={airport.id} align=\"start\">\r\n                            <div>\r\n                               {airport.iso_country}: {airport.name}\r\n                            </div>\r\n                        </li>\r\n                    ))\r\n                }\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n  }\r\n export default GetOnlinePosts;\r\n"]},"metadata":{},"sourceType":"module"}